# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - name: Kaniko builder
        # You may pin to the exact commit or the version.
        # uses: aevea/action-kaniko@5e25ae9c63e13a7e79955b4ff2d600732449fdf6
        uses: aevea/action-kaniko@v0.6.0
        with:
          # Path to the build context
          # path: # optional, default is .
          # Docker registry where the image will be pushed
          # registry: # optional
          # Username used for authentication to the Docker registry
          username: stevenfollis # optional
          # Password used for authentication to the Docker registry
          password: 1c96fd9d-c89f-47e4-8bfe-d6d4e1c567a9 # optional
          # Image name
          image: peteypab
          # Image tag
          tag: foo # optional
          # Enables build cache
          # cache: # optional
          # How long the cache should be considered valid
          # cache_ttl: # optional
          # Docker registry meant to be used as cache
          # cache_registry: # optional
          # Filesystem path meant to be used as cache
          # cache_directory: # optional
          # Dockerfile filename
          # build_file: # optional
          # Prefix to be stripped from the tag
          # strip_tag_prefix: # optional
          # Additional arguments to be passed to the kaniko executor
          # extra_args: # optional
          # Avoids pushing the image if the build generated the same digest
          # skip_unchanged_digest: # optional
          # Tags the built image with additional latest tag
          # tag_with_latest: # optional
          # Sets the target stage to build
          # target: # optional
